
signature MVector
  ( MVector
  , read
  , write
  ) where

import Prelude hiding (read)

import Control.Monad.Primitive (PrimMonad(PrimState))

import Elem

data MVector s

read :: PrimMonad m => MVector (PrimState m) -> Int -> m Elem
write :: PrimMonad m => MVector (PrimState m) -> Int -> Elem -> m ()
